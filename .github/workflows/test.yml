name: Test

on:
  push:
    branches: ["main"]
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-test:
    name: Build & Test

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        rust:
          - { version: 1.56, msrv: true }
          - { version: stable, msrv: false }
        target:
          - { target: "", native: true }
          - { target: --target wasm32-unknown-unknown, native: false }

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache wasm-bindgen
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin/wasm-bindgen
            ~/.cargo/bin/wasm-bindgen-test-runner
          key: wasm-bindgen
      - name: Install wasm-bindgen
        run: cargo install wasm-bindgen-cli
      - name: Install Rust
        run: |
          rustup toolchain install ${{ matrix.rust.version }} --profile minimal ${{ matrix.target.target }}
          rustup default ${{ matrix.rust.version }}
      - name: Build
        run: cargo build ${{ matrix.target.target }}
      - name: Documentation
        run: cargo doc --no-deps ${{ matrix.target.target }}
      - name: Test on Chrome
        if: matrix.rust.msrv == false
        env:
          CHROMEDRIVER: chromedriver
        run: cargo test --all-targets --no-fail-fast ${{ matrix.target.target }}
      - name: Test on Firefox
        if: matrix.rust.msrv == false
        env:
          GECKODRIVER: geckodriver
        run: cargo test --all-targets --no-fail-fast ${{ matrix.target.target }}
      - name: Documentation Test
        if: matrix.rust.msrv == false && matrix.target.native == true
        run: cargo test --doc --no-fail-fast

  safari-build-test:
    name: Build & Test

    runs-on: macos-latest

    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache wasm-bindgen
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin/wasm-bindgen
            ~/.cargo/bin/wasm-bindgen-test-runner
          key: macos-wasm-bindgen
      - name: Install wasm-bindgen
        run: cargo install wasm-bindgen-cli
      - name: Install Rust
        run: rustup target add wasm32-unknown-unknown
      - name: Test on Safari
        env:
          SAFARIDRIVER: safaridriver
        run: cargo test --all-targets --no-fail-fast ${{ matrix.target.target }}

  atomic-build-test:
    name: Atomic Build & Test

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: atomic-test

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache wasm-bindgen
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin/wasm-bindgen
            ~/.cargo/bin/wasm-bindgen-test-runner
          key: atomic-${{ matrix.os }}-wasm-bindgen
      - name: Install wasm-bindgen
        run:
          cargo install wasm-bindgen-cli --git
          https://github.com/daxpedda/wasm-bindgen --branch despair
      - name: Install Rust
        run: |
          rustup toolchain install nightly --profile minimal --target wasm32-unknown-unknown --component rust-src
          rustup default nightly
      - name: Test on Chrome
        if: matrix.os == "ubuntu-latest"
        env:
          CHROMEDRIVER: chromedriver
        run: cargo test --no-fail-fast
      - name: Test on Firefox
        if: matrix.os == "ubuntu-latest"
        env:
          WASM_BINDGEN_USE_NO_MODULE: 1
          GECKODRIVER: geckodriver
        run: cargo test --no-fail-fast
      - name: Test on Safari
        if: matrix.os == "macos-latest"
        env:
          SAFARIDRIVER: safaridriver
        run: cargo test --no-fail-fast

  minimal-versions:
    name: Minimal Versions

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        rust:
          - 1.56
          - stable
        target:
          - ""
          - --target wasm32-unknown-unknown

    steps:
      - name: Install Rust
        run: |
          rustup toolchain install ${{ matrix.rust }} --profile minimal ${{ matrix.target }}
          rustup default ${{ matrix.rust }}
      - name: Install nightly Rust
        run: rustup toolchain install nightly --profile minimal
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        working-directory: minimal-versions
        run: |
          cargo +nightly update -Z minimal-versions
          cargo build ${{ matrix.target }}
